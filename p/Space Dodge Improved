import pygame
import time
import random

pygame.font.init()

WIDTH, HEIGHT = 1000, 800
WIN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Space Dodge")

BG = pygame.transform.scale(pygame.image.load("bg still.jpeg"), (WIDTH, HEIGHT))

# Create two instances of the background for seamless looping
bg_y1, bg_y2 = 0, -HEIGHT

# Load player image
PLAYER_WIDTH, PLAYER_HEIGHT = 40, 60
PLAYER_IMAGE = pygame.transform.scale(pygame.image.load("ship.png"), (PLAYER_WIDTH, PLAYER_HEIGHT))

# Load star image
STAR_WIDTH, STAR_HEIGHT = 25, 50
STAR_IMAGE = pygame.transform.scale(pygame.image.load("star.png"), (STAR_WIDTH, STAR_HEIGHT))

# Define player velocity
PLAYER_VEL = 4  # adjust left and right speed
Y_VEL = 4  # adjust up and down speed

STAR_VEL = 3
BG_SCROLL_VEL = 1  # Background scrolling speed

FONT = pygame.font.SysFont("comicsans", 30)

WHITE = (255, 255, 255)

def draw(player, elapsed_time, stars):
    # Draw the background instances for seamless looping
    WIN.blit(BG, (0, bg_y1))
    WIN.blit(BG, (0, bg_y2))

    time_text = FONT.render(f"Time: {round(elapsed_time)}s", 1, WHITE)
    WIN.blit(time_text, (10, 10))

    WIN.blit(PLAYER_IMAGE, (player.x, player.y))

    for star_x, star_y in stars:
        WIN.blit(STAR_IMAGE, (star_x, star_y))

    pygame.display.update()

def create_star():
    star_x = random.randint(0, WIDTH - STAR_WIDTH)
    star_y = -STAR_HEIGHT
    return star_x, star_y

def handle_player_movement(player):
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player.x - PLAYER_VEL >= 0:
        player.x -= PLAYER_VEL
    if keys[pygame.K_RIGHT] and player.x + PLAYER_VEL + player.width <= WIDTH:
        player.x += PLAYER_VEL
    if keys[pygame.K_UP] and player.y - Y_VEL >= 0:
        player.y -= Y_VEL
    if keys[pygame.K_DOWN] and player.y + Y_VEL + player.height <= HEIGHT:
        player.y += Y_VEL

def main():
    run = True
    game_over = False

    player = pygame.Rect(200, HEIGHT - PLAYER_HEIGHT, PLAYER_WIDTH, PLAYER_HEIGHT)

    clock = pygame.time.Clock()
    start_time = pygame.time.get_ticks()
    elapsed_time = 0

    star_add_increment = 1000
    star_count = 0

    stars = []

    while run:
        star_count += clock.tick(150)
        elapsed_time = (pygame.time.get_ticks() - start_time) / 1000

        if star_count > star_add_increment:
            for _ in range(3):
                stars.append(create_star())

            star_add_increment = max(200, star_add_increment - 50)
            star_count = 0

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        handle_player_movement(player)

        new_stars = []

        for star_x, star_y in stars:
            star_y += STAR_VEL

            if pygame.Rect(star_x, star_y, STAR_WIDTH, STAR_HEIGHT).colliderect(player):
                run = False

            if star_y + STAR_HEIGHT > 0 and star_y < HEIGHT:
                new_stars.append((star_x, star_y))

        stars = new_stars

        # Update background positions for seamless looping with separate speed
        global bg_y1, bg_y2
        bg_y1 += BG_SCROLL_VEL
        bg_y2 += BG_SCROLL_VEL

        if bg_y1 >= HEIGHT:
            bg_y1 = -HEIGHT

        if bg_y2 >= HEIGHT:
            bg_y2 = -HEIGHT


        draw(player, elapsed_time, stars)

        if not run:
            game_over_text = FONT.render("Game Over!", 1, "red")
            WIN.blit(game_over_text, (WIDTH/2 - game_over_text.get_width()/2, HEIGHT/2 - game_over_text.get_height()/2))
            pygame.display.update()
            pygame.time.delay(3000)

    pygame.quit()

if __name__ == "__main__":
    main()
